/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import conexion.Conexion;
import funciones.funcionesCiudades;
import funciones.sentenciasCiudades;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import librerias.Validaciones;
import rojerusan.RSNotifyFade;

/**
 *
 * @author SailorSakura
 */
public class Ciudades extends javax.swing.JInternalFrame {
    Conexion conexion = new Conexion();
    Connection conexionActual = conexion.conectar();
    PreparedStatement ps;
    ResultSet rs;
    public Ciudades() {
        initComponents();
        funcionesCiudades.cargarComboDepartamento();
        this.idCiudad.setText(funciones.funcionesCiudades.extraerIDMaxCIU());
        funcionesCiudades.setListar(""); 
        idCiudad.setVisible(false);
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscarCiudades = new rojerusan.RSMetroTextFullPlaceHolder();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboDepartamento = new rojerusan.RSComboMetro();
        txtAgregarCiudades = new rojerusan.RSMetroTextFullPlaceHolder();
        botonAgregarCiudades = new rojerusan.RSButtonHover();
        idCiudad = new javax.swing.JLabel();
        botonModificarCiudades = new rojerusan.RSButtonHover();
        botonEliminarCiudades = new rojerusan.RSButtonHover();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCiudades = new rojerusan.RSTableMetro();
        jLabel6 = new javax.swing.JLabel();

        setBorder(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("CIUDADES");

        jLabel1.setText("Buscar:");

        txtBuscarCiudades.setForeground(new java.awt.Color(11, 11, 11));
        txtBuscarCiudades.setBorderColor(new java.awt.Color(11, 11, 11));
        txtBuscarCiudades.setBotonColor(new java.awt.Color(240, 4, 7));
        txtBuscarCiudades.setName("txtBuscarCiudades"); // NOI18N
        txtBuscarCiudades.setPhColor(new java.awt.Color(0, 0, 0));
        txtBuscarCiudades.setPlaceholder("");
        txtBuscarCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarCiudadesActionPerformed(evt);
            }
        });
        txtBuscarCiudades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarCiudadesKeyReleased(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-de-cerrar2.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setText("Seleccione el Departamento:");

        comboDepartamento.setColorArrow(new java.awt.Color(240, 4, 7));
        comboDepartamento.setColorBorde(new java.awt.Color(11, 11, 11));
        comboDepartamento.setColorFondo(new java.awt.Color(242, 134, 130));
        comboDepartamento.setName("comboDepartamento"); // NOI18N
        comboDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDepartamentoActionPerformed(evt);
            }
        });

        txtAgregarCiudades.setForeground(new java.awt.Color(11, 11, 11));
        txtAgregarCiudades.setBorderColor(new java.awt.Color(11, 11, 11));
        txtAgregarCiudades.setBotonColor(new java.awt.Color(240, 4, 7));
        txtAgregarCiudades.setName("txtAgregarCiudades"); // NOI18N
        txtAgregarCiudades.setPhColor(new java.awt.Color(0, 0, 0));
        txtAgregarCiudades.setPlaceholder("");
        txtAgregarCiudades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgregarCiudadesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgregarCiudadesKeyTyped(evt);
            }
        });

        botonAgregarCiudades.setBackground(new java.awt.Color(11, 11, 11));
        botonAgregarCiudades.setText("Agregar Ciudad");
        botonAgregarCiudades.setColorHover(new java.awt.Color(240, 4, 7));
        botonAgregarCiudades.setMaximumSize(new java.awt.Dimension(91, 25));
        botonAgregarCiudades.setMinimumSize(new java.awt.Dimension(91, 25));
        botonAgregarCiudades.setName("botonAgregarCiudades"); // NOI18N
        botonAgregarCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarCiudadesActionPerformed(evt);
            }
        });

        idCiudad.setText("ID");
        idCiudad.setName("idCiudad"); // NOI18N

        botonModificarCiudades.setBackground(new java.awt.Color(11, 11, 11));
        botonModificarCiudades.setText("Modificar Ciudad");
        botonModificarCiudades.setColorHover(new java.awt.Color(240, 4, 7));
        botonModificarCiudades.setMaximumSize(new java.awt.Dimension(91, 25));
        botonModificarCiudades.setMinimumSize(new java.awt.Dimension(91, 25));
        botonModificarCiudades.setName("botonModificarCiudades"); // NOI18N
        botonModificarCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarCiudadesActionPerformed(evt);
            }
        });

        botonEliminarCiudades.setBackground(new java.awt.Color(11, 11, 11));
        botonEliminarCiudades.setText("Eliminar Ciudad");
        botonEliminarCiudades.setColorHover(new java.awt.Color(240, 4, 7));
        botonEliminarCiudades.setMaximumSize(new java.awt.Dimension(91, 25));
        botonEliminarCiudades.setMinimumSize(new java.awt.Dimension(91, 25));
        botonEliminarCiudades.setName("botonEliminarCiudades"); // NOI18N
        botonEliminarCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarCiudadesActionPerformed(evt);
            }
        });

        jLabel5.setText("Ingrese una nueva ciudad:");

        tablaCiudades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ciudades", "Departamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCiudades.setColorBackgoundHead(new java.awt.Color(240, 4, 7));
        tablaCiudades.setColorFilasForeground1(new java.awt.Color(240, 4, 7));
        tablaCiudades.setColorFilasForeground2(new java.awt.Color(242, 134, 130));
        tablaCiudades.setName("tablaCiudades"); // NOI18N
        tablaCiudades.setSelectionBackground(new java.awt.Color(240, 198, 196));
        jScrollPane2.setViewportView(tablaCiudades);
        if (tablaCiudades.getColumnModel().getColumnCount() > 0) {
            tablaCiudades.getColumnModel().getColumn(0).setMinWidth(0);
            tablaCiudades.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 4, 7));
        jLabel6.setText("Para agregar una nueva ciudad, ingrese los siguientes datos:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(botonModificarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(botonEliminarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonAgregarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboDepartamento, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txtAgregarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(939, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(30, 30, 30)
                        .addComponent(txtBuscarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(idCiudad)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(idCiudad))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAgregarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonModificarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEliminarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAgregarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarCiudadesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCiudadesKeyReleased
        librerias.Mayusculas.convertiraMayusculasEnJtextfield(txtBuscarCiudades);
        funciones.funcionesCiudades.setListar(this.txtBuscarCiudades.getText());
    }//GEN-LAST:event_txtBuscarCiudadesKeyReleased

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void botonAgregarCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarCiudadesActionPerformed
        txtAgregarCiudades.requestFocus();
        if (txtAgregarCiudades.getText().length()==0 || comboDepartamento.getSelectedIndex() <=0) {
            new rojerusan.RSNotifyFade("ADVERTENCIA", "Ingrese los datos solicitados", 5, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.WARNING).setVisible(true);
        } else {
        
        try{

            String sql= "INSERT INTO ciudades(id_ciudad, n_ciudad, fk_departamento)"
            +"VALUES('"+idCiudad.getText()+"', '"+txtAgregarCiudades.getText()+"', '"+comboDepartamento.getSelectedIndex()+"')";

            ps = conexionActual.prepareStatement(sql);

            int resultado = ps.executeUpdate();
            if (resultado > 0){
                funcionesCiudades.setListar("");
                txtAgregarCiudades.setText("");
                comboDepartamento.setSelectedItem("Seleccione un departamento");
                this.idCiudad.setText(funcionesCiudades.extraerIDMaxCIU());
                new rojerusan.RSNotifyFade("EXITO", "Se ha registrado la ciudad", 5, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);

            }else{
                new rojerusan.RSNotifyFade("ERROR", "Ha ocurrido un problema", 5, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
            }
        } catch (Exception e) {
            System.out.print("error"+e.getMessage());
        }
        }
    }//GEN-LAST:event_botonAgregarCiudadesActionPerformed

    private void botonModificarCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarCiudadesActionPerformed
        
        int selec = tablaCiudades.getSelectedRow();
        if (selec >-1) {
        int fila = tablaCiudades.getSelectedRow();
        Frame f = JOptionPane.getFrameForComponent(this);
        ModificarCiudades dialog = new ModificarCiudades (f, true);
        dialog.txtModificarCiudad.setText(tablaCiudades.getValueAt(fila, 1).toString());
        dialog.comboDepartamentoUpdate.setSelectedItem(tablaCiudades.getValueAt(fila, 2).toString());
        dialog.txtid.setText(tablaCiudades.getValueAt(fila, 0).toString());
        dialog.show();
        
         } else {
            new rojerusan.RSNotifyFade("ADVERTENCIA", "Seleccione una ciudad", 5, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.WARNING).setVisible(true);
        }
    }//GEN-LAST:event_botonModificarCiudadesActionPerformed
String hora = "";
String fecha= "";
    private void botonEliminarCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarCiudadesActionPerformed
            String tabla = "CIUDAD";
            String evento = "DELETE";
            hora = Principal.lblhora.getHora();
            fecha = Principal.lblfecha.getFecha();
        int selec2 = tablaCiudades.getSelectedRow();
        if (selec2 >-1) {
        int fila = tablaCiudades.getSelectedRow();
        sentenciasCiudades s = new sentenciasCiudades();
        s.setId_ciudad(tablaCiudades.getValueAt(fila, 0).toString());
        if (JOptionPane.showConfirmDialog(this, "¿Desea eliminar la ciudad?", "",JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION){
            if (funcionesCiudades.isDelete(s)){
                new rojerusan.RSNotifyFade("EXITO", "Se ha eliminado la ciudad", selec2, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                funcionesCiudades.setListar("");
                funciones.funcionesAuditoria.auditoria(fecha, hora, evento, tabla, login.funcionesLogin.idFuncionario);
                funcionesCiudades.extraerIDMaxCIU();
            }
        }
        } else {
            new rojerusan.RSNotifyFade("ADVERTENCIA", "Seleccione una ciudad", 5, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.WARNING).setVisible(true);
        }
    }//GEN-LAST:event_botonEliminarCiudadesActionPerformed

    private void comboDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDepartamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDepartamentoActionPerformed

    private void txtBuscarCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarCiudadesActionPerformed
        
    }//GEN-LAST:event_txtBuscarCiudadesActionPerformed

    private void txtAgregarCiudadesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgregarCiudadesKeyTyped
        if (txtAgregarCiudades.getText().length()>=50){
            evt.consume();
        } 
        if (Validaciones.Letras(evt.getKeyChar()) && (Validaciones.Espacio(evt.getKeyChar()))){
            evt.consume();
        } 
    }//GEN-LAST:event_txtAgregarCiudadesKeyTyped

    private void txtAgregarCiudadesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgregarCiudadesKeyReleased
        librerias.Mayusculas.convertiraMayusculasEnJtextfield(txtAgregarCiudades);
    }//GEN-LAST:event_txtAgregarCiudadesKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSButtonHover botonAgregarCiudades;
    private rojerusan.RSButtonHover botonEliminarCiudades;
    private rojerusan.RSButtonHover botonModificarCiudades;
    public static rojerusan.RSComboMetro comboDepartamento;
    private javax.swing.JLabel idCiudad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public static rojerusan.RSTableMetro tablaCiudades;
    private rojerusan.RSMetroTextFullPlaceHolder txtAgregarCiudades;
    private rojerusan.RSMetroTextFullPlaceHolder txtBuscarCiudades;
    // End of variables declaration//GEN-END:variables
}
